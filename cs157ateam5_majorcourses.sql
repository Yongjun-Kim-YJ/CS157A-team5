DROP TABLE IF EXISTS `majorCourses`;

CREATE TABLE `majorCourses` (
    courseID VARCHAR(15) PRIMARY KEY,
    courseName VARCHAR(200),
    majorID VARCHAR(45),
    credits INT,
    description varchar(1000)
);

INSERT INTO MajorCourses (majorID, courseID, courseName, credits, description) VALUES
('CS','CS100W', 'Technical Writing Workshop', 3, 'Advanced writing through preparation of technical reports and presentations. Improving skills for writing subject-related reports, project proposals and personal resumes through practice and evaluation. Course assignments will be related to issues concerning careers in computer science.'),
('CS','CS116A', 'Introduction to Computer Graphics', 3, 'Vector geometry, geometric transformations and the graphics pipeline. Basic raster graphics algorithms for drawing discrete lines, clipping, visible surface determination and shading. Display of curves and surfaces. Graphics data structures.'),
('CS','CS116B', 'Computer Graphics Algorithms', 3, 'In-depth discussion of algorithms and techniques used in computer graphics and their implementation. Topics include: animation, fractals, anti-aliasing, fill algorithms, visible surface algorithms, color and shading, ray tracing, radiosity and texture maps. Substantial programming required.'),
('CS','CS122', 'Advanced Programming with Python', 3, 'Advanced features of the Python programming language with emphasis on programming practice. Course involves substantial programming projects in Python.'),
('CS','CS123A', 'Bioinformatics I', 3, 'Introduction to algorithms, tools, and databases of Bioinformatics. Biological foundations: central dogma; sequence databases; pairwise alignment algorithms and tools; Blast; phylogenetics. Possible additional topics: protein structure, multiple sequence alignment, next-gen sequencing, epigenetics, CRISPR. Project applying these approaches to real-world problems.'),
('CS','CS123B', 'Bioinformatics II', 3, 'Advanced Bioinformatics algorithms, tools, databases. Biological background; protein structure/function; sequencing technology; sequence identification; transcriptomics; metagenomics; CRISPR. Possible additional topics: functional genomics; protein networks; drug discovery; pathway analysis; immunoinformatics; analysis pipelines; machine learning applications. Project applying advanced approaches to real-world problems.'),
('CS','CS131', 'Processing Big Data - Tools and Techniques', 3, 'In-depth study of essential tools and techniques for processing big data over the UNIX operating system and/or other operating systems. On UNIX, it includes using grep, sed, awk, join, and programming advanced shell scripts for manipulating big data.'),
('CS','CS133', 'Introduction to Data Visualization', 3, 'Topics in data analysis and visualization. Covers tools and techniques to efficiently analyze and visualize large volumes of data in meaningful ways to help solve complex problems in fields such as life sciences, business, and social sciences.'),
('CS','CS134', 'Computer Game Design and Programming', 3, 'Architectures and object-oriented patterns for computer game design. Animation, simulation, user interfaces, graphics, and intelligent behaviors. Team projects using an existing game engine framework.'),
('CS','CS136', 'Introduction to Computer Vision', 3, 'Fundamental and advanced Computer Vision algorithms. Basic image processing techniques (image convolution, and region and edge detection). Complex vision algorithms for contour detection, depth perception, dynamic vision, and object recognition. Core topics (color processing, texture analysis, and visual geometry).'),
('CS','CS144', 'Advanced C++ Programming', 3, 'Advanced features of C++, including operator overloading, memory management, templates, exceptions, multiple inheritance, RTTI, namespaces, tools.'),
('CS','CS146', 'Data Structures and Algorithms', 3, 'Implementations of advanced tree structures, priority queues, heaps, directed and undirected graphs. Advanced searching and sorting techniques (radix sort, heapsort, mergesort, and quicksort). Design and analysis of data structures and algorithms. Divide-and-conquer, greedy, and dynamic programming algorithm design techniques.'),
('CS','CS147', 'Computer Architecture', 3, 'Introduction to the basic concepts of computer hardware structure and design, including processors and arithmetic logic units, pipelining, and memory hierarchy.'),
('CS','CS149', 'Operating Systems', 3, 'Fundamentals: Contiguous and non-contiguous memory management; processor scheduling and interrupts; concurrent, mutually exclusive, synchronized and deadlocked processes; parallel computing; files. Substantial programming project required.'),
('CS','CS151', 'Object-Oriented Design', 3, 'Design of classes and interfaces. Object-oriented design methodologies and notations. Design patterns. Generics and reflection. Exception handling. Concurrent programming. Graphical user interface programming. Software engineering concepts and tools. Required team-based programming assignment.'),
('CS','CS152', 'Programming Paradigms', 3, 'Programming language syntax and semantics. Data types and type checking. Scope, bindings, and environments. Functional and logic programming paradigms, and comparison to other paradigms. Extensive coverage of a functional language.'),
('CS','CS153', 'Concepts of Compiler Design', 3, 'Theoretical aspects of compiler design, including parsing context free languages, lexical analysis, translation specification and machine-independent code generation. Programming projects to demonstrate design topics.'),
('CS','CS154', 'Formal Languages and Computability', 3, 'Finite automata, context-free languages, Turing machines, computability.'),
('CS','CS155', 'Introduction to the Design and Analysis of Algorithms', 3, 'Algorithm design techniques: dynamic programming, greedy algorithms, Euclidean and extended Euclidean algorithms, Discrete and Fast Fourier transforms. Analysis of algorithms, intractable problems and NP-completeness. Additional topics selected from: selection algorithms and adversary arguments, approximation algorithms, parallel algorithms, and randomized algorithms.'),
('CS','CS156', 'Introduction to Artificial Intelligence', 3, 'Basic concepts and techniques of artificial intelligence: problem solving, search, deduction, intelligent agents, knowledge representation. Topics chosen from logic programming, game playing, planning, machine learning, natural language, neural nets, robotics.'),
('CS','CS157A', 'Introduction to Database Management Systems', 3, 'Relational data model. Relational algebra. Standard SQL. Design theory. Conceptual data modeling. Integrity constraints and triggers. Views and indexes. Transactions. Distributed data management. Interactive and programmatic interfaces to database systems. Application programming project using a prominent database system.'),
('CS','CS157B', 'Database Management Systems II', 3, 'Survey course. Object-oriented data model, definition language, query language. Object relational database systems. Database trends like active, temporal, multimedia, deductive databases. Web database topics, namely, architectures, introduction to interface languages. Team projects.'),
('CS','CS157C', 'NoSQL Database Systems', 3, 'NoSQL Data Models: Key-Value, Wide Column, Document, and Graph Stores. CAP Theorem. Distribution Models. Current NoSQL Databases: Configuration and Deployment, CRUD operations, Indexing, Replication, and Sharding. Public Data Sets. API Coding and Application Development. NoSQL in the Cloud. Team Project.'),
('CS','CS158A', 'Computer Networks', 3, 'Introduction to computer networks, including network layered architectures, local and wide area networks, mobile wireless networks, Internet TCP/IP protocol suite, network resource management, network programming, network performance, network security, network applications.'),
('CS','CS158B', 'Computer Network Management', 3, 'Principles and technologies of network management: reference models, functions (fault, configuration, performance, security and accounting management), management information, communication protocols, integration, and assessment. Network security and cyber defense: cryptography, key distribution, authentication protocols, network attacks, access control, and example systems.'),
('CS','CS159', 'Introduction to Parallel Processing', 3, 'Major parallel architectures: shared memory, distributed memory, SIMD, MIMD. Parallel algorithms: techniques for scientific applications, measures of performance. Parallel programming: principles and implementations in various languages. Assignments on available parallel and vector computers.'),
('CS','CS160', 'Software Engineering', 3, 'Software engineering principles, software process and process models, requirements elicitation and analysis, design, configuration management, quality control, project planning, social and ethical issues. Required team-based software development, including written requirements specification and design documentation, oral presentation, and tool use.'),
('CS','CS161', 'Software Project', 3, 'A substantial project based on material from an advanced area of computer science. Includes lectures on the project topic and the design and testing of software systems. At least 50% of the course grade to be based on the project.'),
('CS','CS166', 'Information Security', 3, 'Fundamental security topics including cryptography, authentication, access control, network security, security protocols, and software security. Networking basics are covered. Additional security topics selected from multilevel security, biometrics, blockchain, machine learning, information warfare, e-commerce, intrusion detection, system evaluation and assurance.'),
('CS','CS168', 'Blockchain and Cryptocurrencies', 3, 'Cryptocurrencies and the blockchain. Centralized clearinghouse solutions vs. distributed consensus solutions. The blockchain and its validation approaches: proof-of-work, proof-of-stake, proof-of-storage, etc. Cryptocurrency wallets. Smart contracts.'),
('CS','CS171', 'Introduction to Machine Learning', 3, 'Covers a selection of classic machine learning techniques including backpropagation and several currently popular neural networking and deep learning architectures. Hands-on lab exercises are a significant part of the course. A major project is required.'),
('CS','CS174', 'Server-side Web Programming', 3, 'Development and deployment of multi-tier web-based applications. Introduction to HTML, XML, enterprise design patterns, web services and database access.'),
('CS','CS175', 'Mobile Device Development', 3, 'Mobile Platform APIs including those for networking, touch, graphics, data, location, and camera. Testing and profiling on devices and emulators/simulators.'),
('CS','CS176', 'Introduction to Social Network Analysis', 3, 'The Web and social networks are complex networks. We study them by unifying tools from different disciplines: computer science, economics, and social sciences. Topics include graph theory, information networks, search, advertisement, auctions.'),
('CS','CS46A', 'Introduction to Programming', 4, 'Introduction to programming for anyone new to the field or who needs a refresher with basic Java programming syntax, object-oriented paradigm, control structures, iteration, etc. Hands-on activities in writing, compiling, executing, and debugging programs for solving real-world problems.'),
('CS','CS46B', 'Introduction to Data Structures', 4, 'Stacks and queues, recursion, lists, dynamic arrays, binary search trees. Iteration over collections. Hashing. Searching, elementary sorting. Big-O notation. Standard collection classes. Weekly hands-on activity.'),
('CS','CS47', 'Introduction to Computer Systems', 3, 'Instruction sets, assembly language and assemblers, linkers and loaders, data representation and manipulation, interrupts, pointers, function calls, argument passing, and basic gate-level digital logic design.');
